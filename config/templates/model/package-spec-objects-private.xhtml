<ui:composition xmlns:h="http://java.sun.com/jsf/html"
        xmlns:ui="http://java.sun.com/jsf/facelets"
        xmlns:fn="http://java.sun.com/jsp/jstl/functions"
        xmlns:g="http://code.google.com/p/ada-ado/generator"
        xmlns:f="http://java.sun.com/jsf/core">

<h:list value="#{package.tables}" var="table">
   #{fn:toUpperCase(table.type)}_NAME : aliased constant String := "#{table.table}";
   <h:list value="#{table.members}" var="column">
   COL_#{column.index}_#{table.rowIndex}_NAME : aliased constant String := "#{fn:toLowerCase(column.sqlName)}";
   </h:list>
#{''}
   #{fn:toUpperCase(table.type)}_DEF : aliased constant ADO.Schemas.Class_Mapping :=
     (Count   => #{table.members.size},
      Table   => #{fn:toUpperCase(table.type)}_NAME'Access,
      Members => (
      <h:list value="#{table.members}" var="column">
         #{column.rowIndex} =&gt; COL_#{column.index}_#{table.rowIndex}_NAME'Access<h:panelGroup rendered="#{1 + column.index lt table.members.size}">,
</h:panelGroup>
      </h:list>)
     );
   #{fn:toUpperCase(table.type)}_TABLE : constant ADO.Schemas.Class_Mapping_Access
      := #{fn:toUpperCase(table.type)}_DEF'Access;
#{''}
<h:panelGroup rendered="#{table.isAuditable}">
   #{fn:toUpperCase(table.type)}_AUDIT_DEF : aliased constant ADO.Audits.Auditable_Mapping :=
     (Count    => #{table.auditables.size},
      Of_Class => #{fn:toUpperCase(table.type)}_DEF'Access,
      Members  => (
      <h:list value="#{table.auditables}" var="column">
         #{column.rowIndex} =&gt; #{column.index}<h:panelGroup rendered="#{column.rowIndex lt table.auditables.size}">,
</h:panelGroup></h:list>)
     );
   #{fn:toUpperCase(table.type)}_AUDIT_TABLE : constant ADO.Audits.Auditable_Mapping_Access
      := #{fn:toUpperCase(table.type)}_AUDIT_DEF'Access;
</h:panelGroup>
#{''}

   Null_#{table.type} : constant #{table.type}_Ref
      := #{table.type}_Ref'(ADO.Objects.Object_Ref with null record);
#{''}

<h:panelGroup rendered="#{not table.isAuditable}">
   type #{fn:capitalize(table.type)}_Impl is
      new ADO.Objects.Object_Record (Key_Type => ADO.Objects.#{table.id.type.isIdentifier ? 'KEY_INTEGER' : 'KEY_STRING'},
                                     Of_Class => #{fn:toUpperCase(table.type)}_DEF'Access)
</h:panelGroup>
<h:panelGroup rendered="#{table.isAuditable}">
   type #{fn:capitalize(table.type)}_Impl is
      new ADO.Audits.Auditable_Object_Record (Key_Type => ADO.Objects.#{table.id.type.isIdentifier ? 'KEY_INTEGER' : 'KEY_STRING'},
                                     Of_Class => #{fn:toUpperCase(table.type)}_DEF'Access,
                                     With_Audit => #{fn:toUpperCase(table.type)}_AUDIT_DEF'Access)
</h:panelGroup>
   with #{table.members.size == 1 ? 'null record;' : 'record'}
<h:list value="#{table.members}" var="column">
<h:panelGroup rendered="#{column.name ne table.id.name}">
       #{fn:capitalize(column.name)} : #{g:adaType(column,0)};
</h:panelGroup>
</h:list>
#{table.members.size != 1 ? '   end record;' : ''}
#{''}

   type #{fn:capitalize(table.type)}_Access is access all #{fn:capitalize(table.type)}_Impl;
#{''}

   overriding
   procedure Destroy (Object : access #{fn:capitalize(table.type)}_Impl);
#{''}

   overriding
   procedure Find (Object  : in out #{fn:capitalize(table.type)}_Impl;
                   Session : in out ADO.Sessions.Session'Class;
                   Query   : in ADO.SQL.Query'Class;
                   Found   : out Boolean);
#{''}

   overriding
   procedure Load (Object  : in out #{fn:capitalize(table.type)}_Impl;
                   Session : in out ADO.Sessions.Session'Class);

   procedure Load (Object  : in out #{fn:capitalize(table.type)}_Impl;
                   Stmt    : in out ADO.Statements.Query_Statement'Class;
                   Session : in out ADO.Sessions.Session'Class);
#{''}

   overriding
   procedure Save (Object  : in out #{fn:capitalize(table.type)}_Impl;
                   Session : in out ADO.Sessions.Master_Session'Class);
#{''}

   overriding
   procedure Create (Object  : in out #{fn:capitalize(table.type)}_Impl;
                     Session : in out ADO.Sessions.Master_Session'Class);
#{''}

   overriding
   procedure Delete (Object  : in out #{fn:capitalize(table.type)}_Impl;
                     Session : in out ADO.Sessions.Master_Session'Class);
#{''}


   procedure Set_Field (Object : in out #{fn:capitalize(table.type)}_Ref'Class;
                        Impl   : out #{fn:capitalize(table.type)}_Access);
</h:list>

</ui:composition>
