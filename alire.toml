description = "Dynamo Ada Generator"
name = "dynamo"
version = "1.2.3"
authors = ["Stephane.Carrez@gmail.com"]
licenses = "Apache-2.0"
maintainers = ["Stephane.Carrez@gmail.com"]
maintainers-logins = ["stcarrez"]
project-files = ["dynamo_tool.gpr"]
tags = ["uml", "generator", "database"]
website = "https://gitlab.com/stcarrez/dynamo"
executables = ["dynamo"]
long-description = """

[![Build Status](https://img.shields.io/jenkins/s/https/jenkins.vacs.fr/Bionic-Dynamo.svg)](https://jenkins.vacs.fr/job/Bionic-Dynamo/)
[![Test Status](https://img.shields.io/jenkins/t/https/jenkins.vacs.fr/Bionic-Dynamo.svg)](https://jenkins.vacs.fr/job/Bionic-Dynamo/)
[![codecov](https://codecov.io/gh/stcarrez/dynamo/branch/master/graph/badge.svg)](https://codecov.io/gh/stcarrez/dynamo)
[![Download](https://img.shields.io/badge/download-1.2.2-brightgreen.svg)](https://download.vacs.fr/dynamo/dynamo-1.2.2.tar.gz)
[![License](https://img.shields.io/badge/license-APACHE2-blue.svg)](LICENSE)
![Commits](https://img.shields.io/github/commits-since/stcarrez/dynamo/1.2.2.svg)

This Ada05 application is a code generator used to generate
an Ada Web Application or database mappings from hibernate-like
XML description, YAML doctrine model or UML models.  It provides various commands for the
generation of a web application which uses the Ada Web Application framework
(https://github.com/stcarrez/ada-awa/).

"""

[available.'case(os)']
linux = true
windows = true
macos = true
'...' = false

[[depends-on]]
security = "^1.4.1"
servletada = "^1.5.3"
serverfaces = "1.5.0"
utilada = "^2.5.0"
elada = "^1.8.0"
utilada_xml = "^2.5.0"
ado_mysql = "2.2.1"
ado_sqlite = "2.2.1"
ado_postgresql = "2.2.1"
ado_all = "2.2.1"
xmlada = "any"
libgpr = "any"

[gpr-externals]
BUILD = ["distrib", "debug", "optimize", "profile", "coverage"]
ARE_SWITCH = ["NO_CALLBACK", "HAS_CALLBACK"]
UTIL_OS = ["win32", "win64", "linux32", "linux64", "macos64", "netbsd32", "netbsd64", "freebsd32", "freebsd64"]

[gpr-set-externals]
BUILD = "distrib"
ARE_SWITCH = "NO_CALLBACK"

[gpr-set-externals."case(os)".linux."case(word-size)".bits-32]
UTIL_OS = "linux32"

[gpr-set-externals."case(os)".linux."case(word-size)".bits-64]
UTIL_OS = "linux64"

[gpr-set-externals."case(os)".macos]
UTIL_OS = "macos64"

[gpr-set-externals."case(os)".windows."case(word-size)".bits-32]
UTIL_OS = "win32"

[gpr-set-externals."case(os)".windows."case(word-size)".bits-64]
UTIL_OS = "win64"

[configuration]
disabled = true
